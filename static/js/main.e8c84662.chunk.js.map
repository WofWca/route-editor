{"version":3,"sources":["App.js","index.js"],"names":["ymaps","window","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePointListItemDragEnd","event","_draggedPoint","handlePointListItemDragStart","draggedPoint","handlePointListItemDrop","dropOntoPoint","setState","state","newStatePoints","points","slice","dropOntoPointInd","indexOf","draggedPointInd","splice","handleNewPointSubmit","preventDefault","newPointName","newPointId","nextPointId","newYmapsPoint","GeoObject","geometry","type","coordinates","map","getCenter","properties","balloonContent","draggable","events","add","mapRefreshRoute","geoObjects","push","id","name","ymapsObj","routeCoordinates","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","pointCoordinates","value","getBounds","err","return","ymapsRouteObj","setCoordinates","handleNewPointNameChange","target","newPointNameInput","React","createRef","_this2","react_default","a","createElement","className","onSubmit","required","autoFocus","placeholder","onChange","ref","point","key","onDragStart","e","onDragOver","allowDrop","onDrop","onDragEnd","_this3","ready","Map","center","zoom","Polyline","current","focus","prevProps","prevState","snapshot","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e8c84662.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nconst ymaps = window.ymaps;\r\n\r\nclass App extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      newPointName: \"\",\r\n      /* `points` item structure: {\r\n          id,\r\n          name,\r\n          ymapsObj: Yandex Maps GeoObject\r\n      } */\r\n      points: []\r\n    };\r\n    this.map = undefined;\r\n    this.nextPointId = 1;\r\n    this.ymapsRouteObj = undefined;\r\n    this.newPointNameInput = React.createRef();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"points-editor\">\r\n          <form onSubmit={this.handleNewPointSubmit}>\r\n            <legend>New waypoint</legend>\r\n            <input\r\n              required\r\n              autoFocus\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              value={this.state.newPointName}\r\n              onChange={this.handleNewPointNameChange}\r\n              ref={this.newPointNameInput}\r\n            />\r\n          </form>\r\n          <ol className=\"points-list\">\r\n            {this.state.points.map((point) => (\r\n              <li\r\n                key={point.id}\r\n                draggable\r\n                onDragStart={(e) => this.handlePointListItemDragStart(point)}\r\n                onDragOver={this.allowDrop}\r\n                onDrop={(e) => this.handlePointListItemDrop(point)}\r\n                onDragEnd={this.handlePointListItemDragEnd}\r\n                className=\"point\"\r\n              >\r\n                {point.name}</li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n        <div id=\"map\" className=\"map\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handlePointListItemDragEnd = (event) => {\r\n    this._draggedPoint = null;\r\n  }\r\n\r\n  handlePointListItemDragStart = (draggedPoint) => {\r\n    this._draggedPoint = draggedPoint;\r\n  }\r\n\r\n  handlePointListItemDrop = (dropOntoPoint) => {\r\n    if (this._draggedPoint) {\r\n      this.setState((state, props) => {\r\n        const newStatePoints = state.points.slice();\r\n        const dropOntoPointInd = state.points.indexOf(dropOntoPoint);\r\n        const draggedPointInd = state.points.indexOf(this._draggedPoint);\r\n        newStatePoints.splice(draggedPointInd, 1);\r\n        newStatePoints.splice(dropOntoPointInd, 0, this._draggedPoint);\r\n        return { points: newStatePoints };\r\n      });\r\n    }\r\n  }\r\n\r\n  allowDrop (event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ymapsInit = () => {\r\n      this.map = new ymaps.Map(\"map\", {\r\n        center: [55.76, 37.64],\r\n        zoom: 10\r\n      });\r\n      this.ymapsRouteObj = new ymaps.Polyline([55.76, 37.64]);\r\n      this.map.geoObjects.add(this.ymapsRouteObj);\r\n      this.map.events.add(\"actionbegin\", () => {\r\n        this.newPointNameInput.current.focus();\r\n      });\r\n    };\r\n    ymaps.ready(ymapsInit);\r\n  }\r\n\r\n  handleNewPointSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newPointName = this.state.newPointName;\r\n    this.setState((state, props) => {\r\n      let newStatePoints = state.points.slice();\r\n      const newPointId = this.nextPointId;\r\n      this.nextPointId++;\r\n      let newYmapsPoint = new ymaps.GeoObject({\r\n        geometry: {\r\n          type: \"Point\",\r\n          coordinates: this.map.getCenter()\r\n        },\r\n        properties: {\r\n          balloonContent: newPointName\r\n        }\r\n      }, { draggable: true }\r\n      );\r\n      newYmapsPoint.events.add(\"geometrychange\", () => {\r\n        // TODO the route flickers when we move points around. Fix it?\r\n        this.mapRefreshRoute();\r\n      });\r\n      this.map.geoObjects.add(newYmapsPoint);\r\n      newStatePoints.push(\r\n        {\r\n          id: newPointId,\r\n          name: newPointName,\r\n          ymapsObj: newYmapsPoint\r\n        }\r\n      );\r\n      return { points: newStatePoints, newPointName: \"\" };\r\n    });\r\n  }\r\n\r\nmapRefreshRoute = () => {\r\n    const routeCoordinates = [];\r\n    for (let point of this.state.points) {\r\n      // For a point, its bounds is a 0 area rectangle.\r\n      let pointCoordinates = point.ymapsObj.geometry.getBounds()[0];\r\n      routeCoordinates.push(pointCoordinates);\r\n    }\r\n    this.ymapsRouteObj.geometry.setCoordinates(routeCoordinates);\r\n  }\r\n\r\n  handleNewPointNameChange = (event) => {\r\n    this.setState({ newPointName: event.target.value });\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    if (this.state.points !== prevState.points) {\r\n      this.mapRefreshRoute();\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}