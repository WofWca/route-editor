{"version":3,"sources":["ymaps.js","App.js","index.js"],"names":["global","ymaps","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePointListItemDragEnd","event","_draggedPoint","handlePointListItemDragStart","draggedPoint","dataTransfer","setData","handlePointListItemDrop","dropOntoPoint","preventDefault","setState","state","newStatePoints","points","slice","dropOntoPointInd","indexOf","draggedPointInd","splice","removePoint","pointInd","pointToREmove","map","geoObjects","remove","ymapsObj","handleNewPointSubmit","newPointName","newPointId","nextPointId","newYmapsPoint","GeoObject","geometry","type","coordinates","getCenter","properties","balloonContent","hintContent","draggable","setPointAddress","_x","_setPointAddress","apply","arguments","asyncToGenerator","regenerator_default","a","mark","_callee","ymapsPoint","result","wrap","_context","prev","next","geocode","getBounds","sent","set","get","getAddressLine","t0","stop","events","add","mapRefreshRoute","e","push","id","name","routeCoordinates","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","pointCoordinates","value","err","return","ymapsRouteObj","setCoordinates","handleNewPointNameChange","target","mapReady","newPointNameInput","React","createRef","_this2","react_default","createElement","className","onSubmit","disabled","required","autoFocus","placeholder","onChange","ref","point","key","onDragStart","onDragOver","allowDrop","onDrop","onDragEnd","onClick","_this3","ready","Map","center","zoom","Polyline","current","focus","prevProps","prevState","snapshot","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1f6d7e4d.chunk.js","sourcesContent":["const ymaps = global.ymaps;\r\nexport default ymaps;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport ymaps from \"./ymaps\";\r\n\r\nclass App extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      newPointName: \"\",\r\n      /* `points` item structure: {\r\n          id,\r\n          name,\r\n          ymapsObj: Yandex Maps GeoObject\r\n      } */\r\n      points: [],\r\n      mapReady: false\r\n    };\r\n    this.map = undefined;\r\n    this.nextPointId = 1;\r\n    this.ymapsRouteObj = undefined;\r\n    this.newPointNameInput = React.createRef();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"points-editor\">\r\n          <form onSubmit={this.handleNewPointSubmit}>\r\n            <legend>New waypoint</legend>\r\n            <input\r\n              disabled={!this.state.mapReady}\r\n              required\r\n              autoFocus\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              value={this.state.newPointName}\r\n              onChange={this.handleNewPointNameChange}\r\n              ref={this.newPointNameInput}\r\n            />\r\n          </form>\r\n          <ol className=\"points-list\">\r\n            {this.state.points.map((point, pointInd) => (\r\n              <li\r\n                key={point.id}\r\n                draggable\r\n                onDragStart={(e) => this.handlePointListItemDragStart(e, point)}\r\n                onDragOver={this.allowDrop}\r\n                onDrop={(e) => this.handlePointListItemDrop(e, point)}\r\n                onDragEnd={this.handlePointListItemDragEnd}\r\n                className=\"point\"\r\n                >\r\n                <span className=\"point-name\">\r\n                  {point.name}\r\n                </span>\r\n                <button\r\n                  onClick={(event) => this.removePoint(pointInd)}\r\n                  className=\"delete\"\r\n                >\r\n                  X\r\n                  </button>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n        <div id=\"map\" className=\"map\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handlePointListItemDragEnd = (event) => {\r\n    this._draggedPoint = null;\r\n  }\r\n\r\n  handlePointListItemDragStart = (event, draggedPoint) => {\r\n    this._draggedPoint = draggedPoint;\r\n    event.dataTransfer.setData(\"text\", \"Stub data\");\r\n  }\r\n\r\n  handlePointListItemDrop = (event, dropOntoPoint) => {\r\n    event.preventDefault();\r\n    if (this._draggedPoint) {\r\n      this.setState((state, props) => {\r\n        const newStatePoints = state.points.slice();\r\n        const dropOntoPointInd = state.points.indexOf(dropOntoPoint);\r\n        const draggedPointInd = state.points.indexOf(this._draggedPoint);\r\n        newStatePoints.splice(draggedPointInd, 1);\r\n        newStatePoints.splice(dropOntoPointInd, 0, this._draggedPoint);\r\n        return { points: newStatePoints };\r\n      });\r\n    }\r\n  }\r\n\r\n  allowDrop (event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  removePoint = (pointInd) => {\r\n    this.setState((state, props) => {\r\n      const newStatePoints = state.points.slice();\r\n      const pointToREmove = state.points[pointInd];\r\n      newStatePoints.splice(pointInd, 1);\r\n      this.map.geoObjects.remove(pointToREmove.ymapsObj);\r\n      return { points: newStatePoints };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ymapsInit = () => {\r\n      this.setState({mapReady: true});\r\n      this.map = new ymaps.Map(\"map\", {\r\n        center: [55.76, 37.64],\r\n        zoom: 10\r\n      });\r\n      this.ymapsRouteObj = new ymaps.Polyline([]);\r\n      this.map.geoObjects.add(this.ymapsRouteObj);\r\n      this.map.events.add(\"actionbegin\", () => {\r\n        this.newPointNameInput.current.focus();\r\n      });\r\n    };\r\n    ymaps.ready(ymapsInit);\r\n  }\r\n\r\n  handleNewPointSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newPointName = this.state.newPointName;\r\n    this.setState((state, props) => {\r\n      let newStatePoints = state.points.slice();\r\n      const newPointId = this.nextPointId;\r\n      this.nextPointId++;\r\n      let newYmapsPoint = new ymaps.GeoObject({\r\n        geometry: {\r\n          type: \"Point\",\r\n          coordinates: this.map.getCenter()\r\n        },\r\n        properties: {\r\n          balloonContent: newPointName,\r\n          hintContent: \"Loading...\"\r\n        }\r\n      }, { draggable: true }\r\n      );\r\n      async function setPointAddress (ymapsPoint) {\r\n        try {\r\n          const result =  await ymaps.geocode(ymapsPoint.geometry.getBounds()[0]);\r\n          ymapsPoint.properties.set({\r\n            hintContent: result.geoObjects.get(0).getAddressLine()\r\n          });\r\n        } catch (err) {\r\n          ymapsPoint.properties.set({\r\n            hintContent: \"Error\"\r\n          });\r\n        }\r\n      }\r\n      setPointAddress(newYmapsPoint);\r\n      newYmapsPoint.events.add(\"geometrychange\", () => {\r\n        this.mapRefreshRoute();\r\n      });\r\n      newYmapsPoint.events.add(\"dragend\", (e) => {\r\n        setPointAddress(e.get(\"target\"));\r\n      });\r\n      newYmapsPoint.events.add(\"dragstart\", (e) => {\r\n        e.get(\"target\").properties.set({ hintContent: \"Loading...\" });\r\n      });\r\n      this.map.geoObjects.add(newYmapsPoint);\r\n      newStatePoints.push(\r\n        {\r\n          id: newPointId,\r\n          name: newPointName,\r\n          ymapsObj: newYmapsPoint\r\n        }\r\n      );\r\n      return { points: newStatePoints, newPointName: \"\" };\r\n    });\r\n  }\r\n\r\n  mapRefreshRoute = () => {\r\n    const routeCoordinates = [];\r\n    for (let point of this.state.points) {\r\n      // For a point, its bounds is a 0 area rectangle.\r\n      let pointCoordinates = point.ymapsObj.geometry.getBounds()[0];\r\n      routeCoordinates.push(pointCoordinates);\r\n    }\r\n    this.ymapsRouteObj.geometry.setCoordinates(routeCoordinates);\r\n  }\r\n\r\n  handleNewPointNameChange = (event) => {\r\n    this.setState({ newPointName: event.target.value });\r\n  }\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    if (this.state.points !== prevState.points) {\r\n      this.mapRefreshRoute();\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}